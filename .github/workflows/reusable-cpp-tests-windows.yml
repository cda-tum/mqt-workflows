name: üá® ‚Ä¢ Tests ‚Ä¢ windows
on:
  workflow_call:
    inputs:
      runs-on:
        description: >
          The Windows runner image to use. Defaults to 'windows-latest'.
          This can be any valid Windows runner image, such as 'windows-2022' or 'windows-2025'.
        default: "windows-latest"
        type: string
      config:
        description: >
          The build type to use. Defaults to 'Release'.
          This can be any valid CMake build type, such as 'Debug' or 'Release'.
        default: "Release"
        type: string
      compiler:
        description: >
          The compiler to use. Defaults to 'msvc'.
          This can be 'msvc' or 'clang'.
          If 'msvc' is selected, '-G Ninja' is automatically added to the CMake arguments.
          If 'clang' is selected, '-T ClangCL' is automatically added to the CMake arguments.
        default: "msvc"
        type: string
      cmake-args:
        description: >
          Additional arguments to pass to CMake. Defaults to an empty string.
          This can be any valid CMake argument, such as '-DBUILD_SHARED_LIBS=ON'.
        default: ""
        type: string
      setup-z3:
        description: "Whether to set up Z3"
        default: false
        type: boolean
      z3-version:
        description: "The version of Z3 to set up"
        default: "4.13.4"
        type: string

defaults:
  run:
    shell: bash

jobs:
  cpp-tests-windows:
    name: üèÅ ${{ inputs.runs-on }} ${{ inputs.compiler }} ${{ inputs.config }}
    runs-on: ${{ inputs.runs-on }}
    env:
      CMAKE_BUILD_PARALLEL_LEVEL: 4
      CTEST_PARALLEL_LEVEL: 4
      FORCE_COLOR: 3
    steps:
      # check out the repository (including submodules and all history)
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      # set up MSVC development environment
      - uses: ilammy/msvc-dev-cmd@v1
      # optionally set up Z3
      - if: ${{ inputs.setup-z3 }}
        name: Setup Z3
        uses: cda-tum/setup-z3@v1
        with:
          version: ${{ inputs.z3-version }}
      # configure CMake in the specified mode, optionally with additional arguments
      - name: Configure CMake
        run: |
          cmake_args="${{ inputs.cmake-args }}"
          if [ "${{ inputs.compiler }}" == "msvc" ]; then
            cmake_args="$cmake_args -G Ninja"
          elif [ "${{ inputs.compiler }}" == "clang" ]; then
            cmake_args="$cmake_args -T ClangCL"
          fi
          cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ inputs.config }} $cmake_args
      # build the project in the specified mode with retries
      - name: Build
        uses: nick-fields/retry@v3 # Windows builds with MSVC are flaky and frequently run out of heap space
        with:
          timeout_minutes: 15
          max_attempts: 5
          shell: bash
          retry_on: error
          command: cmake --build build --config ${{ inputs.config }}
      # run the tests
      - name: Test
        run: ctest -C ${{ inputs.config }} --output-on-failure --test-dir build --repeat until-pass:3 --timeout 600
