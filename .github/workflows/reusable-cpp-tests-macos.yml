name: üá® ‚Ä¢ Tests ‚Ä¢ macos-latest
on:
  workflow_call:
    inputs:
      config:
        description: "The configuration to use (Debug or Release)"
        required: true
        type: string
      cmake-args:
        description: "Additional arguments to pass to CMake"
        default: "-G Ninja"
        type: string
      setup-z3:
        description: "Whether to set up Z3"
        default: false
        type: boolean
      z3-version:
        description: "The version of Z3 to set up"
        default: "4.13.4"
        type: string

jobs:
  cpp-tests-macos:
    name: üçé ${{ matrix.runs-on }} ${{ inputs.config }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [macos-13, macos-14, macos-15] # Tests on the Intel and arm64 architectures
      fail-fast: false # Continue with other jobs if one fails
    env:
      CMAKE_BUILD_PARALLEL_LEVEL: 4
      CTEST_PARALLEL_LEVEL: 4
      FORCE_COLOR: 3
    steps:
      # check out the repository (including submodules and all history)
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      # optionally set up Z3
      - if: ${{ inputs.setup-z3 }}
        name: Setup Z3
        uses: cda-tum/setup-z3@v1
        with:
          version: ${{ inputs.z3-version }}
      # set up ccache for faster C++ builds
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          prepend_symlinks_to_path: false
          override_cache_key: c++-tests-${{ matrix.runs-on }}-${{ inputs.config }}
      # make sure ninja is installed
      - name: Install Ninja
        run: brew install ninja
      # configure CMake in the specified mode, optionally with additional arguments
      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ inputs.config }} ${{ inputs.cmake-args }}
      # build the project in the specified mode
      - name: Build
        run: cmake --build build --config ${{ inputs.config }}
      # run the tests
      - name: Test
        run: ctest -C ${{ inputs.config }} --output-on-failure --test-dir build --repeat until-pass:3 --timeout 600
