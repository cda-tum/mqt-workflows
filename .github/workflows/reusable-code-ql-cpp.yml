name: üìù ‚Ä¢ CodeQL ‚Ä¢ C++
on:
  workflow_call:
    inputs:
      cmake-args:
        description: "Additional arguments to pass to CMake"
        default: ""
        type: string
      setup-z3:
        description: "Whether to set up Z3"
        default: false
        type: boolean
      z3-version:
        description: "The version of Z3 to set up"
        default: "4.13.4"
        type: string

jobs:
  analyze:
    name: üá® Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    env:
      CMAKE_BUILD_PARALLEL_LEVEL: 4
    steps:
      # check out the repository (including submodules and all history)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      # optionally set up Z3
      - if: ${{ inputs.setup-z3 }}
        name: Setup Z3
        uses: cda-tum/setup-z3@v1
        with:
          version: ${{ inputs.z3-version }}
      # set up ccache for faster C++ builds
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          prepend_symlinks_to_path: false
          override_cache_key: codeql-cpp
      # set up mold as linker for faster C++ builds
      - name: Set up mold as linker
        uses: rui314/setup-mold@v1
      # initialize CodeQL with the extended security-and-quality queries
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: cpp
          config: |
            queries:
              - uses: security-and-quality
      # configure CMake in Debug mode, optionally with additional arguments
      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug ${{ inputs.cmake-args }}
      # build the project
      - name: Build
        run: cmake --build build
      # run CodeQL analysis without uploading results (to avoid false positives on third party code)
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          upload: False
          output: sarif-results
      # filter out third party code from the results
      - name: filter-sarif
        uses: advanced-security/filter-sarif@main
        with:
          patterns: |
            -**/extern/**
            -**/build/**
          input: sarif-results/cpp.sarif
          output: sarif-results/cpp.sarif
      # upload the results to CodeQL
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif-results/cpp.sarif
